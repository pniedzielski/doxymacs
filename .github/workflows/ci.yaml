name: Tests and Linting

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  gitlint:
    runs-on: ubuntu-latest
    name: GitLint
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Install gitlint
        run: |
          python -m pip install gitlint

      - name: Run gitlint
        run: |
          # Lint everything from the base to the latest
          gitlint --commits "${{ github.event.pull_request.base.sha }}..HEAD" \
                  -c general.ignore-merge-commits=false                       \
                  -c general.ignore-fixup-commits=false                       \
                  -c general.ignore-fixup-amend-commits=false                 \
                  -c general.ignore-squash-commits=false                      \
                  -c general.contrib=contrib-disallow-cleanup-commits,contrib-title-conventional-commits,contrib-body-requires-signed-off-by \
                  -c title-must-not-contain-word.words=wip                    \
                  -C .gitlint

  version-check:
    runs-on: ubuntu-latest
    name: Version Consistency Check
    steps:
      - uses: actions/checkout@v5

      - name: Ensure that the version string is the same everywhere
        run: |
          VERSION_HEADER=$(sed -rn 's/^;; Version: ([a-zA-Z0-9.+-]+).*$/\1/p' lisp/doxymacs.el)
          VERSION_CONST=$(sed -rn 's/^\(defconst doxymacs-version "([a-zA-Z0-9.+-]+)".*$/\1/p' lisp/doxymacs.el)
          VERSION_AUTOCONF=$(sed -rn '/AC_INIT/ { N; s/^AC_INIT.*,.*\[([a-zA-Z0-9.+-]+)\],.*$/\1/p }' c/configure.ac)
          echo "Version string in ELisp header: $VERSION_HEADER"
          echo "Version string in ELisp constant: $VERSION_CONST"
          echo "Version string in Autoconf: $VERSION_AUTOCONF"
          [ "$VERSION_HEADER" == "$VERSION_CONST" ] || { echo "::error::Version string in ELisp header and in ELisp constant differ"; exit 1; }
          [ "$VERSION_HEADER" == "$VERSION_AUTOCONF" ] || { echo "::error::Version string in ELisp header and in Autoconf differ"; exit 1; }

  build-and-lint:
    runs-on: ubuntu-latest
    name: Build and Lint Package
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        emacs_version:
          - 24.4
          - 24.5
          - 25.1
          - 25.2
          - 25.3
          - 26.1
          - 26.2
          - 26.3
          - 27.1
          - 27.2
          - 28.1
          - 28.2
          - 29.1
          - 29.2
          - 29.3
          - 29.4
          - 30.1
          - 30.2
          - release-snapshot
        experimental: [false]
        include:
          - emacs_version: snapshot
            experimental: true

    steps:
      - uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs_version }}

      - name: Install autotools and compiler
        run: |
          sudo apt install \
              build-essential autoconf automake libtool autotools-dev

      - uses: actions/checkout@v5

      - name: Build the external parser
        run: |
          cd c
          echo "::group::Bootstrapping..."
          echo "::add-matcher::.github/workflows/problem-matchers/autotools.json"
          ./bootstrap
          echo "::remove-matcher owner=autotools::"
          echo "::endgroup::"
          echo "::group::Configuring..."
          ./configure
          echo "::endgroup::"
          echo "::group::Building..."
          echo "::add-matcher::.github/workflows/problem-matchers/elisp-comp.json"
          make
          echo "::remove-matcher owner=elisp-comp::"
          echo "::endgroup::"

      - name: Run checks and lint
        uses: leotaku/elisp-check@v1.4.1
        with:
          file: lisp/*.el
